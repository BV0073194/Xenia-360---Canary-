<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!-- Target Frameworks updated to .NET 8 (LTS) and set WindowsPackageType to None for unpackaged app -->
		<TargetFrameworks>net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
		<OutputType>Exe</OutputType>
		<RootNamespace>Xenia_360____Canary_</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<!-- App Info -->
		<ApplicationTitle>Xenia 360 - (Canary)</ApplicationTitle>
		<ApplicationId>com.companyname.xenia-360-canary</ApplicationId>
		<!-- A unique GUID for the application is required for unpackaged apps. -->
		<ApplicationIdGuid>a3a2e7a1-b4f0-4d9f-9a1b-9b0c8e0a7f1b</ApplicationIdGuid>
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<!-- This key setting enables the unpackaged build -->
		<WindowsPackageType Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">None</WindowsPackageType>

		<!-- Supported OS platform versions for .NET 8 -->
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
	</PropertyGroup>

	<!-- This ensures that when you run with the debugger, it uses the Debug configuration -->
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<DebugType>portable</DebugType>
		<DebugSymbols>true</DebugSymbols>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Resources -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" />
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" />
		<MauiImage Include="Resources\Images\*" />
		<MauiFont Include="Resources\Fonts\*" />
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<!-- NuGet Packages for .NET 8 -->
		<PackageReference Include="Microsoft.Maui.Controls" Version="8.0.40" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="SharpCompress" Version="0.37.2" />
		<PackageReference Include="Tomlyn" Version="0.17.0" />
	</ItemGroup>

	<ItemGroup>
		<!-- This section ensures the external tools are copied to the output directory -->
		<Content Include="Tools\**">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup>
	  <Compile Update="Views\GameLibraryPage.xaml.cs">
	    <DependentUpon>GameLibraryPage.xaml</DependentUpon>
	  </Compile>
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Update="Views\DownloadQueuePage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Views\SettingsPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Views\XeniaStorePage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>

</Project>
